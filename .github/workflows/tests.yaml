name: Tests
on:
  push:
      branches:
          - main
  pull_request:
  schedule:
    - cron: "0 0 * * *" # daily


jobs:
  test:
    runs-on: ubuntu-latest
    concurrency: test

    name: Tests
    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Install bun
        run: npm install -g bun

      - name: Install Dependencies
        run: bun install
     
      - name: Lint
        run: bun run fmt

      - name: Run tests
        run: bun test src --bail --coverage
      
      - name: Build
        run: bun run build

 
  nextjs-local:
    needs:
      - test
    
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
    
      - name: Install bun
        run: npm install -g bun
        
      - name: Install Dependencies
        run: bun install
            
      - name: Build
        run: bun run build
  
      - name: Install example
        run: |
          bun install
          bun add @chronark/sdk@../..
        working-directory: ./examples/nextjs

      - name: Build example
        run: bun run build
        working-directory: ./examples/nextjs

      - name: Start example
        run: bun run start &
        working-directory: ./examples/nextjs
      
      - name: Test
        run: bun test examples/nextjs/ci.test.ts
        env:
          DEPLOYMENT_URL: http://localhost:3000


  nextjs-deployed:
    concurrency: nextjs-deployed
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install bun
        run: npm install -g bun

      - name: Install Canary
        run: bun install @chronark/sdk@${{needs.release.outputs.version}}
        working-directory: ./examples/nextjs

      - name: Deploy
        run: |
          DEPLOYMENT_URL=$(npx vercel --token=${{ secrets.VERCEL_TOKEN }})
          echo "DEPLOYMENT_URL=${DEPLOYMENT_URL}" >> $GITHUB_ENV
        env:
          VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
          VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}
      
      - name: Test
        run: bun test examples/nextjs/ci.test.ts


  cloudflare-local:
    needs:
      - test
    
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
    
      - name: Install bun
        run: npm install -g bun
        
      - name: Install Dependencies
        run: bun install
            
      - name: Build
        run: bun run build
  
      - name: Install example
        run: |
          npm install
          npm install @chronark/sdk@../..
          npm install -g wrangler
        working-directory: ./examples/cloudflare

      - name: Start example
        run: wrangler dev & sleep 5
        working-directory: ./examples/cloudflare
     
      - name: Test
        run: bun test examples/cloudflare/ci.test.ts
        env:
          DEPLOYMENT_URL: http://127.0.0.1:8787


  cloudflare-deployed:
    needs:
      - release
    
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
    
      - name: Install bun
        run: npm install -g bun
        
      - name: Install example
        run: |
          npm install
          npm install @chronark/sdk@${{needs.release.outputs.version}}
          npm install -g wrangler
        working-directory: ./examples/cloudflare

      - name: Deploy
        run: wrangler deploy
        working-directory: ./examples/cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{secrets.CF_API_TOKEN}}
      - name: Test
        run: bun test examples/cloudflare/ci.test.ts
        env:
          DEPLOYMENT_URL: https://sdk.chronark.workers.dev


 
  deno-deployed:
    concurrency: deno-deployed
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
      
      - name: Install bun
        run: npm install -g bun
      
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install @chronark/sdk canary version
        run: sed -i 's;@chronark/sdk@latest;@chronark/sdk@${{needs.release.outputs.version}};' ./examples/deno/main.ts   

      - name: Deploy
        run: deno run -A https://deno.land/x/deploy/deployctl.ts deploy --project=chronark-sdk ./main.ts
        working-directory: examples/deno
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}

      - name: Test
        run: bun test examples/deno/ci.test.ts
        env:
          DEPLOYMENT_URL: https://upstash-redis-70jbfgxwz310.deno.dev

    
  release:
    concurrency: release
    outputs:
      version: ${{ steps.version.outputs.version }}
    needs:
      - nextjs-local
      - cloudflare-local
      
    name: Canary Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: echo "::set-output name=version::0.0.0-ci.${GITHUB_SHA}-$(date +%s)"

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install bun
        run: npm install -g bun

      - name: Set package version
        run: |
          jq '.version = "${{ steps.version.outputs.version }}"' <<< cat package.json > tmp.json
          mv tmp.json package.json 

      - name: Install Dependencies
        run: bun install
      
      - name: Build
        run: bun run build

      - name: Publish ci version
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}
          npm publish --tag=ci
